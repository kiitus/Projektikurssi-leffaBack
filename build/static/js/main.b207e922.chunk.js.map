{"version":3,"sources":["components/ShowReview.js","components/Movie.js","components/ListOfMovies.js","components/Review.js","components/Login.js","components/Information.js","components/SignUp.js","components/Notification.js","components/SearchMovieToReview.js","services/movies.js","services/login.js","services/register.js","services/review.js","App.js","index.js"],"names":["ShowReview","review","style","margin","rating","user","date","Movie","movie","selectToShow","toShow","average","show","title","reviews","reduce","total","length","toFixed","removeSameline","clear","cursor","infoUp","verticalAlign","Title","onClick","Year","display","float","marginRight","src","Poster","alt","marginLeft","textAlignVertical","imdb","map","index","key","ListOfMovies","movies","useState","movieToShow","setMovieToShow","setAverage","select","marginTop","Review","getReview","setRating","writeReview","setWriteReview","buttonDisabled","setButtonDisable","imdbRating","Form","onSubmit","event","preventDefault","push","setTimeout","Group","controlId","Row","Label","type","min","max","value","step","onChange","target","required","Control","placeholder","as","rows","Button","className","variant","disabled","Login","getLoginInformation","username","setUsername","password","setPassword","name","Information","amount","href","paddingTop","SignUp","getSignUpIformation","password2","setPassword2","console","log","Notification","message","color","SearcMovieToReview","getSearchedTitle","search","setsearch","token","newToken","axios","get","then","response","data","id","config","headers","Authorization","address","credentials","post","new_user","newReview","updatedReview","put","App","setMovies","movieToReview","setMovieToReview","setUser","errorMessage","setErrorMessage","usersMovies","setUsersMovies","sortByTitle","a","b","useEffect","movieService","sort","loggedUserJSON","window","localStorage","getItem","JSON","parse","reviewService","catch","error","logout","removeItem","searchFromAPI","Response","makeReview","ownMovieIndex","findIndex","MovieIndex","reviewIndex","confirm","tmpUsers","concat","tmpMovies","movieArray","ownMovieArray","login","loginService","setItem","stringify","padding","to","path","SearchMovieToReview","registerService","userName","bottom","backgroundColor","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b207e922.chunk.js","sourcesContent":["import React from 'react'\r\nconst ShowReview = ({review}) => {\r\n\r\n    const margin = {\r\n        margin: 20\r\n    }\r\n    return (\r\n        <div style={margin}>\r\n            <div>\r\n                <b>Rating:</b> {review.rating}\r\n                \r\n            </div>\r\n            <div>\r\n                <b>Review: </b> {review.review}\r\n                \r\n            </div>\r\n            <div>\r\n                <b>Author:</b> {review.user}  {review.date}\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\nexport default ShowReview\r\n","import React from 'react'\r\nimport ShowReview from './ShowReview'\r\n\r\nconst Movie = ({movie, selectToShow, toShow, average}) => {  //Component for show one movie\r\n    // const [average, setAverage] = useState(null)\r\n\r\n    const show = (title) => {     //Clicked movie title\r\n        //selectToShow(title)\r\n\r\n        let total = movie\r\n            .reviews\r\n            .reduce((total, review) => {\r\n                return total + review.rating\r\n            }, 0)\r\n\r\n        let average = total / movie.reviews.length\r\n        average = average.toFixed(1)\r\n\r\n        //setAverage(average)\r\n        let selectedMovie = {\r\n            title,\r\n            average\r\n        }\r\n        selectToShow(selectedMovie)    //Sends selected movie and it's average to listOfMoives component\r\n    }\r\n\r\n    const sameLine = {\r\n        display: 'inline-block',\r\n        float: \"left\",\r\n        marginRight: 100\r\n    }\r\n    const sameLine2 = {\r\n        //   display:'inline-block',\r\n        marginLeft: 100,\r\n        textAlignVertical: 'top'\r\n    }\r\n    const removeSameline = {\r\n        clear: \"both\",\r\n        cursor: \"pointer\"\r\n\r\n    }\r\n\r\n    const infoUp = {\r\n        verticalAlign: \"text-top\"\r\n    }\r\n\r\n    if (toShow !== movie.Title) {\r\n        return (\r\n            <h3 onClick={()=>show(movie.Title)} style={removeSameline}>\r\n                {movie.Title} {movie.Year}\r\n            </h3>\r\n        )\r\n    }\r\n    if (toShow === movie.Title) {\r\n        return (\r\n            <div>\r\n\r\n                <table>\r\n                    <tbody>\r\n                        <tr>\r\n                            <td style={infoUp}>\r\n                                <h3 onClick= {()=>show(movie.Title)} style={removeSameline}>\r\n                                    {movie.Title} {movie.Year}\r\n                                </h3>\r\n\r\n                                <div style={sameLine}>\r\n\r\n                                    <img src={movie.Poster} alt=\"Poster\"/>\r\n                                </div>\r\n                            </td>\r\n                            <td style={infoUp}>\r\n                                <div style={sameLine2}></div>\r\n\r\n                                <h2>IMDB-rating:{movie.imdb}</h2>\r\n\r\n                                <h2>Average-rating:{average}</h2>\r\n\r\n                                {movie.reviews.map((review, index) => {\r\n                                            return <ShowReview key={index} review={review}/>\r\n                                        })}\r\n                            </td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default Movie\r\n","import Movie from './Movie'\r\nimport React, {useState} from 'react'\r\n\r\nconst ListOfMovies = ({movies}) => {    //Component show all movies/ users movies\r\n    const [movieToShow, setMovieToShow] = useState(null)\r\n    const [average, setAverage] = useState(null)\r\n\r\n    const select = (movie) => {             //Movie component return selected movie and its avarage rating\r\n\r\n        if (movie.title === movieToShow) \r\n            setMovieToShow(null)\r\n        else {\r\n            setMovieToShow(movie.title)\r\n            setAverage(movie.average)\r\n        }\r\n\r\n    }\r\n    const margin = {\r\n        margin: 20\r\n    }\r\n    const marginInner = {\r\n        marginLeft: 20,\r\n        marginTop: 10\r\n    }\r\n\r\n    return (\r\n        <div style={margin}>\r\n            <h2>Movies</h2>\r\n            <div style={marginInner}>\r\n                {movies.map((movie, index) => {\r\n                        return <Movie\r\n                            key={index}\r\n                            movie={movie}\r\n                            toShow={movieToShow}\r\n                            selectToShow={select}\r\n                            average={average}/>\r\n                    })}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ListOfMovies\r\n","import React, {useState} from 'react'\r\n\r\nimport Form from 'react-bootstrap/Form';\r\nimport Button from 'react-bootstrap/Button';\r\n\r\nconst Review = ({movie, getReview}) => { //Component for making a review\r\n    const [rating, setRating] = useState(5.0)\r\n    const [writeReview, setWriteReview] = useState(``)\r\n\r\n    const [buttonDisabled, setButtonDisable] = useState(false)\r\n\r\n    const reviewAdder = (event) => {\r\n        event.preventDefault()\r\n        if (writeReview.length > 3) {\r\n\r\n            setButtonDisable(true) //prevents double click\r\n\r\n            // const review ={...movie,rating,review:writeReview}\r\n\r\n            const review = {\r\n                Title: movie.Title,\r\n                Year: movie.Year,\r\n                Poster: movie.Poster,\r\n                imdb: movie.imdbRating,\r\n                reviews: []\r\n            }\r\n\r\n            review\r\n                .reviews\r\n                .push({rating, review: writeReview})\r\n\r\n            getReview(review) //Send review to app component\r\n\r\n            setRating(5)\r\n            setWriteReview(\"\")\r\n\r\n            setTimeout(() => { //Prevent double  click\r\n                setButtonDisable(false)\r\n            }, 1000)\r\n\r\n        }\r\n    }\r\n\r\n    const left = {\r\n        display: 'inline-block',\r\n        float: \"left\",\r\n        marginRight: 110,\r\n        marginLeft: 50\r\n    }\r\n    const margin = {\r\n        marginLeft: 50\r\n    }\r\n \r\n\r\n    if (movie === null) {\r\n        return null\r\n    } else {\r\n\r\n        return (\r\n            <div>\r\n\r\n                <h2 style={margin}>\r\n                    {movie.Title} {movie.Year}\r\n                </h2>\r\n                <div style={left}>\r\n                    <h3>\r\n                        IMDB-rating:{movie.imdbRating}</h3>\r\n                    <p>\r\n                        <img src={movie.Poster} alt=\"Poster\"/>\r\n                    </p>\r\n                </div>\r\n\r\n                <h2>Review movie</h2>\r\n                <Form onSubmit={reviewAdder}>\r\n\r\n                    <Form.Group controlId=\"reviewTextarea\">\r\n                        <Form.Row>\r\n                            <Form.Label>Rating</Form.Label>\r\n                          <input type=\"number\" min=\"0\" max=\"10\" value={rating} step=\"0.1\"\r\n                           onChange={({target})=>{setRating(target.value)}} required></input>\r\n                        </Form.Row>\r\n                        <Form.Row>\r\n\r\n                            <Form.Label>Write a review</Form.Label>\r\n                            <Form.Control\r\n                                placeholder=\"Write your review here ( min 4 letters)\"\r\n                                as=\"textarea\"\r\n                                rows=\"17\"\r\n                                value={writeReview}\r\n                                onChange={({target}) => setWriteReview(target.value)}/>\r\n\r\n                            <Button className=\"float-right\"  variant=\"primary\" type=\"submit\" disabled={buttonDisabled}>\r\n                                Save review\r\n                            </Button>\r\n                        </Form.Row>\r\n                    </Form.Group>\r\n\r\n                </Form>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Review","import React, { useState } from 'react'\r\n\r\nimport Form from 'react-bootstrap/Form';\r\nimport Button from 'react-bootstrap/Button';\r\n\r\n\r\nconst Login = ({getLoginInformation}) =>   //Compnent for getting sign in information\r\n{\r\n    const style ={\r\n        margin: 22\r\n        }\r\n\r\n    const [username, setUsername] = useState('')\r\n    const [password, setPassword] = useState('')\r\n\r\n  //  const history = useHistory()\r\n\r\n    const handleLogin = (event) =>\r\n    {\r\n     event.preventDefault()\r\n    \r\n     getLoginInformation(username,password)  //Send informatio to app component\r\n\r\n     \r\n     setUsername('')\r\n     setPassword(\"\")\r\n  //   history.push('/')\r\n    }\r\n    return(\r\n<div>\r\n\r\n      <Form style={style} onSubmit={handleLogin}>\r\n  <Form.Group controlId=\"formBasicEmail\">\r\n    <Form.Label>Username:</Form.Label>\r\n    <Form.Control type=\"text\" placeholder=\"Enter username\" value={username} onChange={({ target }) => setUsername(target.value)}  />\r\n  </Form.Group>\r\n\r\n  <Form.Group controlId=\"formBasicPassword\">\r\n    <Form.Label>Password:</Form.Label>\r\n    <Form.Control type=\"password\" placeholder=\"Enter password\" value={password}\r\n          name=\"Password\"\r\n          onChange={({ target }) => setPassword(target.value)} />\r\n  </Form.Group>\r\n\r\n  <Button variant=\"primary\" type=\"submit\">\r\n    Login\r\n  </Button>\r\n</Form>\r\n</div>\r\n\r\n    )\r\n}\r\nexport default Login","import React from 'react'\r\n\r\nconst margin = {\r\n    margin: 20\r\n}\r\nconst Information = ({amount}) => {   //Component for information about the site\r\n    return (\r\n        <div style={margin}>\r\n            <h2>Welcome to use THE REVIEWER</h2>\r\n            <p>This is an app for reading and writing reviews for movies. You can read\r\n                reviews without signing in, but to write a review you must make an account for\r\n                the site. You will see the reviews by cliking the title of the movie</p>\r\n            <p>There are {amount} movies reviewed in the site</p>\r\n            <p>\r\n                <b>When you test the site, please write some sensible review</b>\r\n            </p>\r\n            <p>The site has been made using React, Axios, Json web token, Node.js (express) and MongoDB (mongoose).</p>\r\n            <p>Github repo can be found <a href=\"https://github.com/kiitus/Projektikurssi-leffaBack\"><b>here</b></a></p>\r\n            <h3 style={{paddingTop:\"30px\"}}>My other projects are:</h3>\r\n            <ul>\r\n                <li><a href=\"https://teemun.herokuapp.com/\">Class reservation application</a> which repo is <a href=\"https://github.com/kiitus/ht-reservationHandlebars\">HERE</a></li>\r\n                <li><a href=\"https://webshopsql.herokuapp.com/\">Webshop application</a> which repo is <a href=\"https://github.com/kiitus/webshop_psql\">HERE</a></li>\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Information","import React, {useState} from 'react'\r\n\r\nimport Form from 'react-bootstrap/Form';\r\nimport Button from 'react-bootstrap/Button';\r\n\r\nconst SignUp = ({getSignUpIformation}) => {     //Component for making a account\r\n    const margin = {\r\n        margin: 22\r\n    }\r\n\r\n    const [username, setUsername] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [password2, setPassword2] = useState('')\r\n\r\n    const handleSingUp = (event) => {\r\n        event.preventDefault()\r\n\r\n        console.log(getSignUpIformation(username, password, password2))\r\n\r\n        setUsername('')\r\n        setPassword(\"\")\r\n        setPassword2(\"\")\r\n    }\r\n    return (\r\n        <div>\r\n\r\n            <Form style={margin} onSubmit={handleSingUp}>\r\n                <Form.Group controlId=\"formBasicEmail\">\r\n                    <Form.Label>Username:</Form.Label>\r\n                    <Form.Control\r\n                        type=\"text\"\r\n                        placeholder=\"Enter username\"\r\n                        value={username}\r\n                        onChange={({target}) => setUsername(target.value)}/>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId=\"formBasicPassword\">\r\n                    <Form.Label>Password:</Form.Label>\r\n                    <Form.Control\r\n                        type=\"password\"\r\n                        placeholder=\"Enter password\"\r\n                        value={password}\r\n                        name=\"Password\"\r\n                        onChange={({target}) => setPassword(target.value)}/>\r\n                </Form.Group>\r\n                <Form.Group controlId=\"formBasicPassword2\">\r\n                    <Form.Label>Password:</Form.Label>\r\n                    <Form.Control\r\n                        type=\"password\"\r\n                        placeholder=\"Enter same password\"\r\n                        value={password2}\r\n                        name=\"Password2\"\r\n                        onChange={({target}) => setPassword2(target.value)}/>\r\n                </Form.Group>\r\n\r\n                <Button variant=\"primary\" type=\"submit\">\r\n                    Sign up\r\n                </Button>\r\n            </Form>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SignUp","import React from 'react'\r\n\r\nconst Notification = ({ message }) => { //component for showing error messages\r\n    const errorStyle ={\r\n        color:\"red\",\r\n        margin:10\r\n    }\r\n    if (message === null) {\r\n      return null\r\n    }\r\n  \r\n    return (\r\n      <div style={errorStyle}>\r\n        {message}\r\n      </div>\r\n    )\r\n  }\r\n\r\n  export default Notification","import React, {useState} from 'react'\r\nimport Form from 'react-bootstrap/Form';\r\nimport Button from 'react-bootstrap/Button';\r\n\r\nconst SearcMovieToReview = ({getSearchedTitle}) => {  //component for form to search movie form api\r\n    const [search, setsearch] = useState(\"\")\r\n\r\n    const getMovieAPI = (event) => { //gets movie data from omdbapi\r\n        event.preventDefault()\r\n\r\n        getSearchedTitle(search)\r\n\r\n        setsearch(\"\")\r\n    }\r\n    const margin = {\r\n        marginRight: 10,\r\n        marginTop: 20\r\n    }\r\n\r\n    return (\r\n\r\n        <Form style={margin} onSubmit={getMovieAPI}>\r\n            <Form.Group controlId=\"formBasicMovie\">\r\n                <Form.Label>Search movie to review:</Form.Label>\r\n                <Form.Control\r\n                    type=\"text\"\r\n                    placeholder=\"Title of the movie\"\r\n                    value={search}\r\n                    name=\"search\"\r\n                    onChange={({target}) => setsearch(target.value)}/>\r\n            </Form.Group>\r\n            <Button variant=\"primary\" type=\"submit\">\r\n                Seach movie\r\n            </Button>\r\n        </Form>\r\n\r\n    )\r\n}\r\nexport default SearcMovieToReview","import axios from 'axios'\nconst baseUrl = '/api/movies'\n\n\nlet token = null\n\nconst setToken = newToken => {\n  token = `bearer ${newToken}`\n}\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response => response.data)\n}\n\nconst getUsersMovies = (id) =>\n{\n  const config = {\n    headers: { Authorization: token },\n  }\n  const request = axios.get(`${baseUrl}/${id}`,config)\n  return request.then(response => response.data)\n}\n\n\nconst searchMovie = (title) =>\n{\n  const address = `https://www.omdbapi.com/?t=${title}&apikey=d20392f7`\n  return axios.get(address).then((response) =>\n  {\n   return response\n  })\n}\n\nexport default { setToken, getAll, getUsersMovies, searchMovie}","import axios from 'axios'\r\n// const baseUrl = 'http://localhost:3001/api/login'\r\nconst baseUrl = '/api/login'\r\n\r\nconst login = (credentials) =>{\r\n    return axios.post(baseUrl,credentials).then((response)=>\r\n     {\r\n         return response.data\r\n     })\r\n }\r\n \r\n \r\n export default { login }","import axios from 'axios'\r\n//const baseUrl = 'http://localhost:3001/api/users'\r\nconst baseUrl = '/api/users'\r\n\r\nconst register = (new_user)=>{\r\n  \r\n    return axios.post(baseUrl,new_user).then((response)=>\r\n    {\r\n        return response.data\r\n    }\r\n    )\r\n  }\r\n  \r\n  export default { register}","\r\nimport axios from 'axios'\r\nconst baseUrl = '/api/reviews'\r\n\r\nlet token = null\r\n\r\nconst setToken = newToken => {\r\n  token = `bearer ${newToken}`\r\n}\r\n\r\nconst create = (newReview)=>{\r\n    const config = {\r\n      headers: { Authorization: token },\r\n    }\r\n  \r\n    const request = axios.post(baseUrl,newReview,config)\r\n    return request.then(response => response.data)\r\n  }\r\n\r\n  const update = (id,updatedReview)=>\r\n  {\r\n    const config = {\r\n        headers: { Authorization: token },\r\n      }\r\n      console.log(config)\r\n      let request = axios.put(`${baseUrl}/${id}`,updatedReview,config)\r\n      return request.then((response)=>\r\n      {\r\n          return response.data\r\n      })\r\n  }\r\n  export default { setToken,create,update}","import React, { useState, useEffect } from 'react'\nimport {\n  BrowserRouter as Router,\n  Switch, Route, Link\n} from \"react-router-dom\"\n\nimport ListOfMovies from './components/ListOfMovies'\nimport Review from './components/Review'\nimport Login from './components/Login'\nimport Information from './components/Information'\nimport SignUp from './components/SignUp'\nimport Notification from './components/Notification'\nimport SearchMovieToReview from './components/SearchMovieToReview'\nimport movieService from './services/movies'\nimport loginService from './services/login'\nimport registerService from './services/register'\nimport reviewService from './services/review'\n\nconst App = () => {\n  const [movies, setMovies] = useState([]) //All movies with their reviews\n  const [movieToReview,setMovieToReview] = useState(null) //Movie from API to revies\n  const [user, setUser] = useState(null) //Logged in user\n  const [errorMessage,setErrorMessage] = useState(null)//Error messages\n  const [usersMovies, setUsersMovies] = useState([]) //Movies of logged in user with their reviews\n  \n  \n\n const sortByTitle = ((a,b) =>{\n    if(a.Title > b.Title)\n    {\n      return 1\n    }\n    else if (b.Title  > a.Title)\n    {\n      return -1\n    }\n    else\n    {\n      return 0\n    }\n  })\n\n  useEffect(() => {     //Gets all reviews from server when user entters in the site\n    movieService.getAll().then(movies =>\n      {\n    \n       movies.sort(sortByTitle); \n      setMovies( movies )\n    \n      }\n    )  \n  }, [])\n\n\n  useEffect(() => {   //Handels logged in user when user entters to the site\n    const loggedUserJSON = window.localStorage.getItem('loggedAppUser')\n    if (loggedUserJSON) {\n      const user = JSON.parse(loggedUserJSON)\n      console.log(user)\n      setUser(user)\n    reviewService.setToken(user.token)\n    movieService.setToken(user.token)\n\n    if(user)  //Gets logged in users reviewed movies\n    {\n      movieService.getUsersMovies(user.id).then((data)=>\n      {\n        if(data !==null)\n        {\n        data.movies.sort(sortByTitle)\n        setUsersMovies(data.movies)\n        }\n      }).catch((error)=>\n      {\n        setErrorMessage(`${error.response.data.message}`)\n        setTimeout(()=>\n        {\n          setErrorMessage(null)\n        \n        },6000)\n\n        logout()\n      })\n    }\n    }\n  }, [])\n\n \nconst logout = ()=>{\n\n  window.localStorage.removeItem('loggedAppUser')\n  setUser(null)\n  reviewService.setToken(null);\n  movieService.setToken(null)\n  setUsersMovies([])\n  setMovieToReview(null)\n\n}\n  const searchFromAPI = (search)=>    //Gets movie data from omdbapi\n  {\n  //  event.preventDefault()\n    \n    movieService.searchMovie(search).then((response)=>\n    {\n      \n     if (response.data.Response!==\"False\")\n     {\n     setMovieToReview(response.data)\n     }\n     else\n    {\n      setMovieToReview(null)\n    }\n   //  setsearch(\"\")\n    }).catch((error)=>\n    {\n    console.log(error)\n    })\n  }\n  const makeReview =(review) =>   //Handels review made by review component\n  {\n   \n    let ownMovieIndex = usersMovies.findIndex((movie)=>{ //Has user\talready reviewed this movie \n    return movie.Title === review.Title      \n    })\n    let MovieIndex = movies.findIndex((movie)=>  //Has someone reviewed this movie\n    {\n      return movie.Title === review.Title\n    })\n\n\n\n    let reviewIndex = -1;\n    if(ownMovieIndex !== -1)  //If user has already reviewed this movie\n    {\n\n      reviewIndex = usersMovies[ownMovieIndex].reviews.findIndex((review)=>  //Which reviews is his\n      {\n        return review.user === user.username   \n      })\n\n\n      if(window.confirm(`You have already reviewed this movie. Update the review?`)) //Do we overwrite the review\n      {\n       reviewService.update(usersMovies[ownMovieIndex].reviews[reviewIndex].id,review.reviews[0]).then((updatedReview)=>\n       {\n         //Let's update the review to users and all reviews\n        let tmpUsers = usersMovies.concat()\n        let tmpMovies = movies.concat()\n\n    \n        tmpUsers[ownMovieIndex].reviews[reviewIndex] = updatedReview\n        tmpMovies[MovieIndex].reviews[reviewIndex] = updatedReview\n\n        setUsersMovies(tmpUsers)\n        setMovies(tmpMovies)\n\n       }).catch((error)=>\n       {\n         setErrorMessage(`${error.response.data.message}`)\n         setTimeout(()=>\n         {\n           setErrorMessage(null)\n         },6000)\n\n         logout()\n       })\n     }\n    }\n    else if(ownMovieIndex === -1)  // Logged in user hasn't reviewed the movie\n    {\n      reviewService.create(review).then((newReview)=>\n      {\n         if(MovieIndex === -1) //No one has reviewed the movie\n         {\n           review.reviews.length = 0 //Change the review from form to the one in database(includes date and user)\n            review.reviews.push(newReview)\n\n          //Updates the review to all reviews state\n          let movieArray = movies.concat(review)\n\n           movieArray.sort(sortByTitle)\n         setMovies(movieArray)\n         }\n         else   //Movie is already reviewed by someone, so jus add review to that movie\n         {\n          let movieArray =movies.concat()\n                   \n          movieArray[MovieIndex].reviews.push(newReview)\n          setMovies(movieArray)\n         }\n\n         let ownMovieArray\n       \n         if(MovieIndex ===-1)  // add review to users review state\n          ownMovieArray = usersMovies.concat(review) //brand new movie reviewed\n         else      \n         ownMovieArray =usersMovies.concat(movies[MovieIndex]) //someone has already reviewed movie\n         \n         ownMovieArray.sort(sortByTitle)\n        setUsersMovies(ownMovieArray)\n        }).catch((error)=>\n        {\n          setErrorMessage(`${error.response.data.message}`)\n          setTimeout(()=>\n          {\n            setErrorMessage(null)\n          },6000)\n\n          logout()\n        })\n\n        \n       \n      }\n       setMovieToReview(null)\n    }\n\n  \n\n\n  const login =(username,password) =>\n  {\n  \n    loginService.login({username,password}).then((user)=>{\n    \n\n      window.localStorage.setItem(\n        'loggedAppUser', JSON.stringify(user)\n      ) \n      reviewService.setToken(user.token)\n      movieService.setToken(user.token)\n    \n      movieService.getUsersMovies(user.id).then((data)=> //Gets logged in users reviewed movies \n      {\n        data.movies.sort(sortByTitle)\n        setUsersMovies(data.movies)\n      })\n      setUser(user)\n\n    }).catch((error)=>{setErrorMessage(\n    \n      `${error.response.data.error}`\n    )\n    setTimeout(() => {\n      setErrorMessage(null)\n    }, 6000)\n  })\n\n  }\n \n\nconst getSignUpIformation = (username,password,password2)=>{  //New user registeres in the site\n  if(password === password2)\n  {\n\n     registerService.register({userName:username,password}).then((user)=>\n    {\n     login(user.userName,password)  \n    \n    }).catch((error)=>\n    {\n      \n      console.log(error.response)\n      setErrorMessage(error.response.data.message)\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 6000)\n\n     return false\n    })\n  }else\n  {\n    setErrorMessage(\"Passwords didn't match\")\n    setTimeout(() => {\n      setErrorMessage(null)\n    }, 6000)\n    return false\n  }\n}\n\n\nconst padding = {\n  padding: 15\n}\n\n\nreturn(\n\n<div className=\"container\">\n  <Router>\n     \n      <div>\n        <Link style={padding} to=\"/\">home</Link>\n        <Link style={padding} to=\"/reviews\">all reviews</Link>\n        <Link style={padding} to=\"/your_reviews\">movies reviewed by you</Link>\n        <Link style={padding} to=\"/make_review\">make review</Link>\n      {user ?\n      null :  \n      <Link style={padding} to=\"/sign_up\">Sign up</Link>}\n        {user\n      ? <em>{user.username} logged in <button onClick={logout}> Logout</button></em>\n      : <span>You are not logged in</span>\n     // : <Link style={padding} to=\"/login\">login</Link>\n    }\n      </div>\n      <Notification message={errorMessage}/>\n      <Switch>\n        <Route path=\"/sign_up\">\n          {!user?        //Notice ! mark, if not logged in show sign up form, when signs in show make review\n          <div>\n          <SignUp getSignUpIformation={getSignUpIformation} />\n          </div>\n          :<div><SearchMovieToReview getSearchedTitle={searchFromAPI}/> \n          <Review movie={movieToReview} getReview={makeReview} />\n          </div>}\n        </Route>\n\n        <Route path=\"/reviews\">\n          <ListOfMovies  movies={movies} />\n        </Route>\n\n        <Route path=\"/your_reviews\">\n          {user?                              //Requires logged in to show users movies(reviews)\n          <ListOfMovies movies={usersMovies} />\n          :<div>\n          <Login getLoginInformation={login}/>\n          </div>}\n        </Route>\n\n        <Route path=\"/make_review\">\n          {user?                //requires logged in the make review\n           <div ><SearchMovieToReview getSearchedTitle={searchFromAPI}/>\n        <Review movie={movieToReview} getReview={makeReview} />\n        </div>\n        :<div>\n          <Login getLoginInformation={login}/></div>}\n        </Route>\n\n        <Route path=\"/login\">       \n        <Login getLoginInformation={login}/>\n        </Route>\n\n       < Route path=\"/\">\n       <Information amount={movies.length}/>\n        </Route>\n\n      </Switch>\n    </Router>\n    \n    \n    <footer style={{clear:'both',marginTop:40,bottom:0,\n          padding:20,backgroundColor:\"grey\"}}>\n        <i>Teemu Hallinen, Ohjelmistosuunnittelu täydennyskoulutus SeAMK 2019-2020</i>\n      </footer>\n    </div>\n   \n)\n  \n}\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}
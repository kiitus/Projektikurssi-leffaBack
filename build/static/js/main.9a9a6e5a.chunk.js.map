{"version":3,"sources":["components/ShowReview.js","components/Movie.js","components/ListOfMovies.js","components/Review.js","components/Login.js","components/Information.js","components/SearchMovieToReview.js","services/movies.js","services/login.js","App.js","index.js"],"names":["ShowReview","review","style","margin","rating","user","date","Movie","movie","useState","showInfo","setShowInfo","changeView","removeSameline","clear","onClick","Title","Year","display","float","marginRight","src","Poster","alt","marginLeft","textAlignVertical","imdb","reviews","map","index","key","ListOfMovies","movies","Review","getReview","setRating","writeReview","setWriteReview","imdbRating","onSubmit","event","preventDefault","console","log","push","required","min","max","step","value","name","onChange","rows","cols","target","type","Login","getLoginInformation","username","setUsername","password","setPassword","Information","SearcMovieToReview","getSearchedTitle","search","setsearch","token","axios","get","then","response","data","id","newToken","title","address","newReview","config","headers","Authorization","post","credentials","App","setMovies","movieToReview","setMovieToReview","setUser","usersMovies","setUsersMovies","sortByTitle","a","b","useEffect","movieService","sort","loggedUserJSON","window","localStorage","getItem","JSON","parse","login","loginService","setItem","stringify","catch","padding","to","removeItem","path","SearchMovieToReview","Response","error","findIndex","concat","newArray","indexOwnReviews","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9a9a6e5a.chunk.js","sourcesContent":["import React from 'react'\r\nconst ShowReview = ({ review }) => {\r\n\r\n    const margin = {\r\n        margin: 20\r\n    }\r\nreturn(\r\n    <div style={margin}>\r\n    <div>\r\n     Rating: {review.rating}\r\n    </div>\r\n    <div>\r\n    Review: {review.review}\r\n    </div>\r\n    <div>\r\n    {review.user} {review.date}\r\n    </div>\r\n\r\n    </div>)\r\n}\r\nexport default ShowReview\r\n","import React, { useState } from 'react'\r\nimport ShowReview from './ShowReview'\r\n\r\nconst Movie = ({ movie }) => {\r\n  const [showInfo, setShowInfo] = useState(false)\r\n\r\n  const changeView = ()=>{\r\n    setShowInfo(!showInfo)\r\n  }\r\n  const sameLine={\r\n    display:'inline-block',\r\n    float:\"left\",\r\n    marginRight:100\r\n  }\r\n  const sameLine2={\r\n //   display:'inline-block',\r\n    marginLeft: 100,\r\n    textAlignVertical: 'top',\r\n    \r\n  }\r\n  const removeSameline={\r\n    clear:\"both\"\r\n  }\r\n\r\n  if(showInfo === false)\r\n{\r\n     return(\r\n  <h3 onClick= {changeView} style={removeSameline} >\r\n    {movie.Title} {movie.Year}\r\n  </h3>\r\n  )\r\n     }\r\n     if(showInfo === true)\r\n     {\r\n      return(\r\n      <div>\r\n          <h3 onClick= {changeView} style={removeSameline}>\r\n           {movie.Title} {movie.Year}\r\n            </h3>\r\n          \r\n          <div  style={sameLine}>\r\n       \r\n          <img src={movie.Poster} alt=\"Poster\"/>\r\n          </div>\r\n          <div style={sameLine2}>\r\n        \r\n         <h2> IMDB-rating:{movie.imdb}</h2>\r\n          {movie.reviews.map((review,index)=>{\r\n            return <ShowReview key={index} review={review} />\r\n          })}\r\n          </div>\r\n          \r\n      </div>\r\n       )\r\n     }\r\n  \r\n  }\r\n\r\nexport default Movie\r\n","import Movie from './Movie'\r\nimport React from 'react'\r\n\r\n\r\n\r\n\r\nconst ListOfMovies = ({movies}) =>{\r\nreturn(\r\n    <div>\r\n<h2>Movies</h2>\r\n{movies.map((movie,index)=>\r\n{\r\nreturn <Movie key={index} movie={movie} />\r\n})}\r\n</div>\r\n)}\r\n\r\nexport default ListOfMovies\r\n","import React, { useState } from 'react'\r\nimport NumericInput from 'react-numeric-input';\r\n\r\n\r\nconst Review = ({ movie, getReview }) =>\r\n{\r\n    const [rating,setRating] = useState(5)\r\n    const [writeReview,setWriteReview] = useState(\"\")\r\n    \r\n\r\n\r\nconst reviewAdder = (event) =>\r\n{\r\n event.preventDefault()\r\n// const review ={...movie,rating,review:writeReview}\r\n\r\nconst review = {Title:movie.Title,Year:movie.Year,Poster:movie.Poster,imdb:movie.imdbRating,reviews:[]}\r\n\r\nconsole.log(review.imdb)\r\nreview.reviews.push({rating,review:writeReview})\r\n\r\nconsole.log(review)\r\n getReview(review)\r\n\r\n setRating('')\r\n setWriteReview(\"\")\r\n\r\n}\r\n\r\nif(movie === null)\r\n{\r\nreturn null\r\n}\r\nelse{\r\n    return(\r\n  <div>\r\n\r\n    {movie.Title} {movie.Year} \r\n    <p>\r\n    <img src={movie.Poster} alt=\"Poster\"/>\r\n     </p>\r\n    IMDB-rating:{movie.imdbRating}\r\n     <form onSubmit={reviewAdder} >\r\n      <h2>Review movie</h2>\r\n    Rating <NumericInput required  min={0} max={10} step={0.1} value={rating} name=\"rating\" onChange={setRating}/>\r\n\r\n \r\n     <p> Review</p><p><textarea value={writeReview} name=\"review\"  rows={8} cols={50} \r\n         onChange={({ target }) =>setWriteReview(target.value)}/>\r\n  </p>\r\n  <button type=\"submit\">Rate movie</button>\r\n</form>\r\n\r\n\r\n  </div>\r\n    )\r\n}\r\n}\r\n\r\nexport default Review","import React, { useState } from 'react'\r\nimport {\r\n  useHistory\r\n} from 'react-router-dom'\r\n\r\n\r\nconst Login = ({getLoginInformation}) =>\r\n{\r\n    const style ={\r\n        margin: 22\r\n        }\r\n\r\n    const [username, setUsername] = useState('')\r\n    const [password, setPassword] = useState('')\r\n\r\n  //  const history = useHistory()\r\n\r\n    const handleLogin = (event) =>\r\n    {\r\n     event.preventDefault()\r\n     \r\n     getLoginInformation(username,password)\r\n\r\n     setUsername('')\r\n     setPassword(\"\")\r\n  //   history.push('/')\r\n    }\r\n    return(\r\n    <div style={style}>\r\n     \r\n    <form onSubmit={handleLogin}>\r\n      <div>\r\n        username\r\n          <input\r\n          type=\"text\"\r\n          value={username}\r\n          name=\"Username\"\r\n          onChange={({ target }) => setUsername(target.value)}\r\n        />\r\n      </div>\r\n      <div>\r\n        password\r\n          <input\r\n          type=\"password\"\r\n          value={password}\r\n          name=\"Password\"\r\n          onChange={({ target }) => setPassword(target.value)}\r\n        />\r\n       \r\n        \r\n      </div>\r\n      <button type=\"submit\">login</button>\r\n    </form>\r\n    \r\n  </div>\r\n    )\r\n}\r\nexport default Login","import React from 'react'\r\n\r\nconst margin = {\r\n    margin:20\r\n}\r\nconst Information = () =>{\r\n    return(\r\n        <div style={margin}>\r\n        <h2>Welcome to use THE REVIEWER</h2>\r\n    <p>This is an app for reading and writing reviews for movies. You can read\r\n    reviews without singing in, but to write a review you must make an account for the site.</p>\r\n    <p>The site has been made using React, MongoDB and node.js.</p>\r\n\r\n    </div>\r\n    )}\r\n    \r\n    export default Information","import React, { useState } from 'react'\r\n\r\nconst SearcMovieToReview = ({getSearchedTitle}) =>\r\n{\r\n    const [search, setsearch] = useState('')\r\n\r\n    const getMovieAPI = (event)=>    //Haetaan eolkuvan tiedot omdbapi:sta\r\n    {\r\n      event.preventDefault()\r\n\r\n      getSearchedTitle(search)\r\n      \r\n      setsearch(\"\")\r\n    }\r\n\r\n    const style = {\r\n      margin: 20\r\n    }\r\n    return(\r\n    <div style={style}>\r\n    <form onSubmit={getMovieAPI} >\r\n      <h2>Search movie</h2>\r\n\r\n         Title <input type=\"text\" value={search} name=\"search\"\r\n         onChange={({ target }) =>setsearch(target.value)}/>\r\n        <button type=\"submit\">Search movie</button>\r\n    </form>\r\n    \r\n  </div>\r\n    )\r\n}\r\nexport default SearcMovieToReview","import axios from 'axios'\nconst baseUrl = '/api/movies'\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response => response.data)\n}\n\nconst getUsersReviews = (id) =>\n{\n  const request = axios.get(`${baseUrl}/${id}`)\n  return request.then(response => response.data)\n}\n\n\nlet token = null\n\nconst setToken = newToken => {\n  token = `bearer ${newToken}`\n}\n\n\nconst searchMovie = (title) =>\n{\n  const address = `https://www.omdbapi.com/?t=${title}&apikey=d20392f7`\n  return axios.get(address).then((response) =>\n  {\n   return response\n  })\n}\n\nconst create = (newReview)=>{\n  const config = {\n    headers: { Authorization: token },\n  }\n\n  const request = axios.post(baseUrl,newReview,config)\n  return request.then(response => response.data)\n}\n\nexport default { getAll, getUsersReviews, setToken, searchMovie,create}","import axios from 'axios'\r\nconst baseUrl = 'http://localhost:3001/api/login'\r\n\r\nconst login = (credentials) =>{\r\n    return axios.post(baseUrl,credentials).then((response)=>\r\n     {\r\n         return response.data\r\n     })\r\n }\r\n \r\n \r\n export default { login }","import React, { useState, useEffect } from 'react'\nimport {\n  BrowserRouter as Router,\n  Switch, Route, Link\n} from \"react-router-dom\"\n\nimport ListOfMovies from './components/ListOfMovies'\nimport Movie from './components/Movie'\nimport Review from './components/Review'\nimport Login from './components/Login'\nimport Information from './components/Information'\nimport SearchMovieToReview from './components/SearchMovieToReview'\nimport movieService from './services/movies'\nimport loginService from './services/login'\n\nconst App = () => {\n  const [movies, setMovies] = useState([])\n // const [search, setsearch] = useState('')\n  const [movieToReview,setMovieToReview] = useState(null)\n // const [username, setUsername] = useState('') \n // const [password, setPassword] = useState('') \n  const [user, setUser] = useState(null)\n  const [errorMessge,setErrorMessage] = useState(null)\n  const [usersMovies, setUsersMovies] = useState([])\n  \n\n const sortByTitle = ((a,b) =>{\n    if(a.Title > b.Title)\n    {\n      return 1\n    }\n    else if (b.Title  > a.Title)\n    {\n      return -1\n    }\n    else\n    {\n      return 0\n    }\n  })\n\n  useEffect(() => {\n    movieService.getAll().then(movies =>\n      {\n\n       movies.sort(sortByTitle); \n      setMovies( movies )\n    \n      }\n    )  \n  }, [])\n\n\n  useEffect(() => {\n    const loggedUserJSON = window.localStorage.getItem('loggedBlogAppUser')\n    if (loggedUserJSON) {\n      const user = JSON.parse(loggedUserJSON)\n      setUser(user)\n    movieService.setToken(user.token)\n\n    if(user)\n    {\n      movieService.getUsersReviews(user.id).then((data)=>\n      {\n        data.movies.sort(sortByTitle)\n        setUsersMovies(data.movies)\n      })\n    }\n    }\n  }, [])\n\n /* const handleLogin = (event)=>{\n    event.preventDefault()\n    loginService.login({username,password}).then((user)=>{\n      console.log(user)\n      window.localStorage.setItem(\n        'loggedBlogAppUser', JSON.stringify(user)\n      ) \n      movieService.setToken(user.token)\n      setUser(user)\n      setUsername(\"\")\n      setPassword(\"\")\n    }\n    ).catch((error)=>{ \n    setErrorMessage(\n      `${error.response.data.error}`\n    )\n    setTimeout(() => {\n      setErrorMessage(null)\n    }, 2000)\n  })\n} \n*/\nconst logout = ()=>{\n\n  window.localStorage.removeItem('loggedBlogAppUser')\n  setUser(null)\n  movieService.setToken(null);\n  setUsersMovies([])\n\n}\n  const searchFromAPI = (search)=>    //Haetaan eolkuvan tiedot omdbapi:sta\n  {\n  //  event.preventDefault()\n    \n    movieService.searchMovie(search).then((response)=>\n    {\n      \n     if (response.data.Response!==\"False\")\n     {\n     setMovieToReview(response.data)\n     }\n     else\n    {\n      setMovieToReview(null)\n    }\n   //  setsearch(\"\")\n    }).catch((error)=>\n    {\n    console.log(error)\n    })\n  }\n  const makeReview =(review) =>   //Käsitellään Review komponentilla tehty arvostelu\n  {\n   // event.preventDefault()\n   // const review ={...movieToReview,rating}\n  \n //  review = {...review,user:user.username}\n    review.reviews[0].user = user.username\n\n    console.log(review.imdb)\n    movieService.create(review).then((newReview)=>\n    {\n      const index = movies.findIndex((movie)=>\n      {\n       return movie.Title ===review.Title\n      })\n      \n      if(index === -1)\n      {\n      \n      setMovies(movies.concat(review))    //Kaataa ohjelman jos tekee toisen arvoselun samalla istunnolla\n      }\n      else\n      {\n        let newArray = [...movies]\n        //newArray[index] = {...newArray[index].reviews.push(newReview)}\n\n       \n        newArray[index].reviews.push(newReview)\n       \n        setMovies(newArray)\n       \n      }\n\n      const indexOwnReviews = usersMovies.findIndex((movie)=>\n      {\n       return movie.Title ===review.Title\n      })\n      \n      if(indexOwnReviews === -1)\n      {\n      \n      setUsersMovies(usersMovies.concat(review))    //Kaataa ohjelman jos tekee toisen arvoselun samalla istunnolla\n      }\n      else\n      {\n        let newArray = [...usersMovies]\n        //newArray[index] = {...newArray[index].reviews.push(newReview)}\n\n       \n        newArray[indexOwnReviews].reviews.push(newReview)\n       \n        setUsersMovies(newArray)\n       \n      }\n\n\n\n      setMovieToReview(null)\n    })\n \n  }\n\n  const login =(username,password) =>\n  {\n\n    loginService.login({username,password}).then((user)=>{\n     // console.log(user)\n      window.localStorage.setItem(\n        'loggedBlogAppUser', JSON.stringify(user)\n      ) \n      movieService.setToken(user.token)\n    \n      movieService.getUsersReviews(user.id).then((data)=>  \n      {\n        setUsersMovies(data.movies)\n      })\n      setUser(user)\n    }).catch(()=>console.log(\"Login failed\"))\n  }\n  const padding = {\n    padding: 5\n  }\nconst margin ={\n  margin:20\n}\n\nreturn(\n<div style = {margin}>\n  <Router>\n     \n      <div>\n        <Link style={padding} to=\"/\">home</Link>\n        <Link style={padding} to=\"/reviews\">all reviews</Link>\n        <Link style={padding} to=\"/your_reviews\">movies reviewed by you</Link>\n        <Link style={padding} to=\"/make_review\">make review</Link>\n        {user\n      ? <em>{user.username} logged in <button onClick={logout}> Logout</button></em>\n      : <span>You are not logged in</span>\n     // : <Link style={padding} to=\"/login\">login</Link>\n    }\n      </div>\n\n      <Switch>\n        <Route path=\"/reviews\">\n          <ListOfMovies  movies={movies} />\n        </Route>\n        <Route path=\"/your_reviews\">\n          {user?\n          <ListOfMovies movies={usersMovies} />:\n          <Login getLoginInformation={login}/>}\n        </Route>\n        <Route path=\"/make_review\">\n          {user? <div >\n        <SearchMovieToReview getSearchedTitle={searchFromAPI}/>\n        <Review movie={movieToReview} getReview={makeReview} />\n        </div>\n        :<Login getLoginInformation={login}/>}\n        </Route>\n        <Route path=\"/login\">\n        <Login getLoginInformation={login}/>\n        </Route>\n       < Route path=\"/\">\n       <Information/>\n        </Route>\n      </Switch>\n\n      <div style={{clear:'both'}}>\n        <i>Teemu Hallinen, Ohjelmistosuunnittelu täydennyskoulutus 2019-2020</i>\n      </div>\n    </Router>\n    </div>\n)\n  \n}\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}
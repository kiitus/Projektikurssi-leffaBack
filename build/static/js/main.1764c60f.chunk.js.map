{"version":3,"sources":["components/ShowReview.js","components/Movie.js","components/ListOfMovies.js","components/Review.js","components/Login.js","components/Information.js","components/SignUp.js","components/Notification.js","components/SearchMovieToReview.js","services/movies.js","services/login.js","services/register.js","services/review.js","App.js","index.js"],"names":["ShowReview","review","style","margin","rating","user","date","Movie","movie","selectToShow","toShow","average","show","title","reviews","reduce","total","length","toFixed","removeSameline","clear","cursor","infoUp","verticalAlign","Title","onClick","Year","display","float","marginRight","src","Poster","alt","marginLeft","textAlignVertical","imdb","map","index","key","ListOfMovies","movies","useState","movieToShow","setMovieToShow","setAverage","select","marginTop","Review","getReview","setRating","writeReview","setWriteReview","buttonDisabled","setButtonDisable","imdbRating","Form","onSubmit","event","preventDefault","push","setTimeout","Group","controlId","Row","Label","required","min","max","step","value","name","onChange","Control","placeholder","as","rows","target","Button","variant","type","disabled","Login","getLoginInformation","username","setUsername","password","setPassword","Information","amount","SignUp","getSignUpIformation","password2","setPassword2","console","log","Notification","message","color","SearcMovieToReview","getSearchedTitle","search","setsearch","axios","get","then","response","data","id","address","credentials","post","new_user","token","newToken","newReview","config","headers","Authorization","updatedReview","put","App","setMovies","movieToReview","setMovieToReview","setUser","errorMessage","setErrorMessage","usersMovies","setUsersMovies","sortByTitle","a","b","useEffect","movieService","sort","loggedUserJSON","window","localStorage","getItem","JSON","parse","reviewService","searchFromAPI","Response","catch","error","makeReview","ownMovieIndex","findIndex","MovieIndex","reviewIndex","confirm","tmpUsers","concat","tmpMovies","movieArray","ownMovieArray","login","loginService","setItem","stringify","padding","className","to","removeItem","path","SearchMovieToReview","registerService","userName","bottom","backgroundColor","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1764c60f.chunk.js","sourcesContent":["import React from 'react'\r\nconst ShowReview = ({review}) => {\r\n\r\n    const margin = {\r\n        margin: 20\r\n    }\r\n    return (\r\n        <div style={margin}>\r\n            <div>\r\n                <b>Rating:</b> {review.rating}\r\n                \r\n            </div>\r\n            <div>\r\n                <b>Review: </b> {review.review}\r\n                \r\n            </div>\r\n            <div>\r\n                <b>Author:</b> {review.user}  {review.date}\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\nexport default ShowReview\r\n","import React from 'react'\r\nimport ShowReview from './ShowReview'\r\n\r\nconst Movie = ({movie, selectToShow, toShow, average}) => {\r\n    // const [average, setAverage] = useState(null)\r\n\r\n    const show = (title) => {     //Clicked movie title\r\n        //selectToShow(title)\r\n\r\n        let total = movie\r\n            .reviews\r\n            .reduce((total, review) => {\r\n                return total + review.rating\r\n            }, 0)\r\n\r\n        let average = total / movie.reviews.length\r\n        average = average.toFixed(1)\r\n\r\n        //setAverage(average)\r\n        let selectedMovie = {\r\n            title,\r\n            average\r\n        }\r\n        selectToShow(selectedMovie)    //Sends selected movie and it's average to listOfMoives component\r\n    }\r\n\r\n    const sameLine = {\r\n        display: 'inline-block',\r\n        float: \"left\",\r\n        marginRight: 100\r\n    }\r\n    const sameLine2 = {\r\n        //   display:'inline-block',\r\n        marginLeft: 100,\r\n        textAlignVertical: 'top'\r\n    }\r\n    const removeSameline = {\r\n        clear: \"both\",\r\n        cursor: \"pointer\"\r\n\r\n    }\r\n\r\n    const infoUp = {\r\n        verticalAlign: \"text-top\"\r\n    }\r\n\r\n    if (toShow !== movie.Title) {\r\n        return (\r\n            <h3 onClick={()=>show(movie.Title)} style={removeSameline}>\r\n                {movie.Title} {movie.Year}\r\n            </h3>\r\n        )\r\n    }\r\n    if (toShow === movie.Title) {\r\n        return (\r\n            <div>\r\n\r\n                <table>\r\n                    <tbody>\r\n                        <tr>\r\n                            <td style={infoUp}>\r\n                                <h3 onClick= {()=>show(movie.Title)} style={removeSameline}>\r\n                                    {movie.Title} {movie.Year}\r\n                                </h3>\r\n\r\n                                <div style={sameLine}>\r\n\r\n                                    <img src={movie.Poster} alt=\"Poster\"/>\r\n                                </div>\r\n                            </td>\r\n                            <td style={infoUp}>\r\n                                <div style={sameLine2}></div>\r\n\r\n                                <h2>IMDB-rating:{movie.imdb}</h2>\r\n\r\n                                <h2>Average-rating:{average}</h2>\r\n\r\n                                {movie.reviews.map((review, index) => {\r\n                                            return <ShowReview key={index} review={review}/>\r\n                                        })}\r\n                            </td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default Movie\r\n","import Movie from './Movie'\r\nimport React, {useState} from 'react'\r\n\r\nconst ListOfMovies = ({movies}) => {\r\n    const [movieToShow, setMovieToShow] = useState(null)\r\n    const [average, setAverage] = useState(null)\r\n\r\n    const select = (movie) => {             //Movie component return selected movie and its avarage rating\r\n\r\n        if (movie.title === movieToShow) \r\n            setMovieToShow(null)\r\n        else {\r\n            setMovieToShow(movie.title)\r\n            setAverage(movie.average)\r\n        }\r\n\r\n    }\r\n    const margin = {\r\n        margin: 20\r\n    }\r\n    const marginInner = {\r\n        marginLeft: 20,\r\n        marginTop: 10\r\n    }\r\n\r\n    return (\r\n        <div style={margin}>\r\n            <h2>Movies</h2>\r\n            <div style={marginInner}>\r\n                {movies.map((movie, index) => {\r\n                        return <Movie\r\n                            key={index}\r\n                            movie={movie}\r\n                            toShow={movieToShow}\r\n                            selectToShow={select}\r\n                            average={average}/>\r\n                    })}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ListOfMovies\r\n","import React, {useState} from 'react'\r\nimport NumericInput from 'react-numeric-input';\r\n\r\nimport Form from 'react-bootstrap/Form';\r\nimport Button from 'react-bootstrap/Button';\r\n\r\nconst Review = ({movie, getReview}) => {\r\n    const [rating, setRating] = useState(5)\r\n    const [writeReview, setWriteReview] = useState(``)\r\n\r\n    const [buttonDisabled, setButtonDisable] = useState(false)\r\n\r\n    const reviewAdder = (event) => {\r\n        event.preventDefault()\r\n        if (writeReview.length > 3) {\r\n\r\n            setButtonDisable(true)  //prevents double click\r\n\r\n            // const review ={...movie,rating,review:writeReview}\r\n\r\n            const review = {\r\n                Title: movie.Title,\r\n                Year: movie.Year,\r\n                Poster: movie.Poster,\r\n                imdb: movie.imdbRating,\r\n                reviews: []\r\n            }\r\n\r\n            review\r\n                .reviews\r\n                .push({rating, review: writeReview})\r\n\r\n            getReview(review) //Send review to app component\r\n\r\n            setRating(5)\r\n            setWriteReview(\"\")\r\n\r\n            setTimeout(() => {   //Prevent double  click\r\n                setButtonDisable(false)\r\n            }, 1000)\r\n\r\n        }\r\n    }\r\n\r\n    const left = {\r\n        display: 'inline-block',\r\n        float: \"left\",\r\n        marginRight: 110,\r\n        marginLeft: 50\r\n    }\r\n\r\n    if (movie === null) {\r\n        return null\r\n    } else {\r\n\r\n        return (\r\n            <div>\r\n                <div style={left}>\r\n                    <h2>\r\n                        {movie.Title}\r\n                        {movie.Year}\r\n                    </h2>\r\n                    <h3>\r\n                        IMDB-rating:{movie.imdbRating}</h3>\r\n                    <p>\r\n                        <img src={movie.Poster} alt=\"Poster\"/>\r\n                    </p>\r\n                </div>\r\n\r\n                <h2>Review movie</h2>\r\n                <Form onSubmit={reviewAdder}>\r\n\r\n                    <Form.Group controlId=\"reviewTextarea\">\r\n                        <Form.Row>\r\n                            <Form.Label>Rating</Form.Label>\r\n                            <NumericInput\r\n                                required=\"required\"\r\n                                min={0}\r\n                                max={10}\r\n                                step={0.1}\r\n                                value={rating}\r\n                                name=\"rating\"\r\n                                onChange={setRating}/>\r\n                        </Form.Row>\r\n                        <Form.Row>\r\n\r\n                            <Form.Label>Write a review</Form.Label>\r\n                            <Form.Control\r\n                                placeholder=\"Write your review here ( min 4 letters)\"\r\n                                as=\"textarea\"\r\n                                rows=\"17\"\r\n                                value={writeReview}\r\n                                onChange={({target}) => setWriteReview(target.value)}/>\r\n\r\n                            <Button variant=\"primary\" type=\"submit\" disabled={buttonDisabled}>\r\n                                Save review\r\n                            </Button>\r\n                        </Form.Row>\r\n                    </Form.Group>\r\n\r\n                </Form>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Review","import React, { useState } from 'react'\r\n\r\nimport Form from 'react-bootstrap/Form';\r\nimport Button from 'react-bootstrap/Button';\r\n\r\n\r\nconst Login = ({getLoginInformation}) =>\r\n{\r\n    const style ={\r\n        margin: 22\r\n        }\r\n\r\n    const [username, setUsername] = useState('')\r\n    const [password, setPassword] = useState('')\r\n\r\n  //  const history = useHistory()\r\n\r\n    const handleLogin = (event) =>\r\n    {\r\n     event.preventDefault()\r\n    \r\n     getLoginInformation(username,password)  //Send informatio to app component\r\n\r\n     \r\n     setUsername('')\r\n     setPassword(\"\")\r\n  //   history.push('/')\r\n    }\r\n    return(\r\n<div>\r\n\r\n      <Form style={style} onSubmit={handleLogin}>\r\n  <Form.Group controlId=\"formBasicEmail\">\r\n    <Form.Label>Username:</Form.Label>\r\n    <Form.Control type=\"text\" placeholder=\"Enter username\" value={username} onChange={({ target }) => setUsername(target.value)}  />\r\n  </Form.Group>\r\n\r\n  <Form.Group controlId=\"formBasicPassword\">\r\n    <Form.Label>Password:</Form.Label>\r\n    <Form.Control type=\"password\" placeholder=\"Enter password\" value={password}\r\n          name=\"Password\"\r\n          onChange={({ target }) => setPassword(target.value)} />\r\n  </Form.Group>\r\n\r\n  <Button variant=\"primary\" type=\"submit\">\r\n    Login\r\n  </Button>\r\n</Form>\r\n</div>\r\n\r\n    )\r\n}\r\nexport default Login","import React from 'react'\r\n\r\nconst margin = {\r\n    margin:20\r\n}\r\nconst Information = ({amount}) =>{\r\n    return(\r\n        <div style={margin}>\r\n        <h2>Welcome to use THE REVIEWER</h2>\r\n    <p>This is an app for reading and writing reviews for movies. You can read\r\n    reviews without signing in, but to write a review you must make an account for the site. You will \r\n    see the reviews by cliking the title of the movie</p>\r\n    <p>There are {amount} movies reviewed in the site</p>\r\n\t<p><b>When you test the site, please write some sensible review</b></p>\r\n    <p>The site has been made using React, MongoDB and Node.js.</p>\r\n\r\n    </div>\r\n    )}\r\n    \r\n    export default Information","import React, {useState} from 'react'\r\n\r\nimport Form from 'react-bootstrap/Form';\r\nimport Button from 'react-bootstrap/Button';\r\n\r\nconst SignUp = ({getSignUpIformation}) => {\r\n    const margin = {\r\n        margin: 22\r\n    }\r\n\r\n    const [username, setUsername] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [password2, setPassword2] = useState('')\r\n\r\n    const handleSingUp = (event) => {\r\n        event.preventDefault()\r\n\r\n        console.log(getSignUpIformation(username, password, password2))\r\n\r\n        setUsername('')\r\n        setPassword(\"\")\r\n        setPassword2(\"\")\r\n    }\r\n    return (\r\n        <div>\r\n\r\n            <Form style={margin} onSubmit={handleSingUp}>\r\n                <Form.Group controlId=\"formBasicEmail\">\r\n                    <Form.Label>Username:</Form.Label>\r\n                    <Form.Control\r\n                        type=\"text\"\r\n                        placeholder=\"Enter username\"\r\n                        value={username}\r\n                        onChange={({target}) => setUsername(target.value)}/>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId=\"formBasicPassword\">\r\n                    <Form.Label>Password:</Form.Label>\r\n                    <Form.Control\r\n                        type=\"password\"\r\n                        placeholder=\"Enter password\"\r\n                        value={password}\r\n                        name=\"Password\"\r\n                        onChange={({target}) => setPassword(target.value)}/>\r\n                </Form.Group>\r\n                <Form.Group controlId=\"formBasicPassword2\">\r\n                    <Form.Label>Password:</Form.Label>\r\n                    <Form.Control\r\n                        type=\"password\"\r\n                        placeholder=\"Enter same password\"\r\n                        value={password2}\r\n                        name=\"Password2\"\r\n                        onChange={({target}) => setPassword2(target.value)}/>\r\n                </Form.Group>\r\n\r\n                <Button variant=\"primary\" type=\"submit\">\r\n                    Sign up\r\n                </Button>\r\n            </Form>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SignUp","import React from 'react'\r\n\r\nconst Notification = ({ message }) => {\r\n    const errorStyle ={\r\n        color:\"red\",\r\n        margin:10\r\n    }\r\n    if (message === null) {\r\n      return null\r\n    }\r\n  \r\n    return (\r\n      <div style={errorStyle}>\r\n        {message}\r\n      </div>\r\n    )\r\n  }\r\n\r\n  export default Notification","import React, {useState} from 'react'\r\nimport Form from 'react-bootstrap/Form';\r\nimport Button from 'react-bootstrap/Button';\r\n\r\nconst SearcMovieToReview = ({getSearchedTitle}) => {\r\n    const [search, setsearch] = useState(\"\")\r\n\r\n    const getMovieAPI = (event) => { //gets movie data from omdbapi\r\n        event.preventDefault()\r\n\r\n        getSearchedTitle(search)\r\n\r\n        setsearch(\"\")\r\n    }\r\n    const margin = {\r\n        marginRight: 10,\r\n        marginTop: 20\r\n    }\r\n\r\n    return (\r\n\r\n        <Form style={margin} onSubmit={getMovieAPI}>\r\n            <Form.Group controlId=\"formBasicMovie\">\r\n                <Form.Label>Search movie to review:</Form.Label>\r\n                <Form.Control\r\n                    type=\"text\"\r\n                    placeholder=\"Title of the movie\"\r\n                    value={search}\r\n                    name=\"search\"\r\n                    onChange={({target}) => setsearch(target.value)}/>\r\n            </Form.Group>\r\n            <Button variant=\"primary\" type=\"submit\">\r\n                Seach movie\r\n            </Button>\r\n        </Form>\r\n\r\n    )\r\n}\r\nexport default SearcMovieToReview","import axios from 'axios'\nconst baseUrl = '/api/movies'\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response => response.data)\n}\n\nconst getUsersMovies = (id) =>\n{\n  const request = axios.get(`${baseUrl}/${id}`)\n  return request.then(response => response.data)\n}\n\n\nlet token = null\n\nconst setToken = newToken => {\n  token = `bearer ${newToken}`\n}\n\n\nconst searchMovie = (title) =>\n{\n  const address = `https://www.omdbapi.com/?t=${title}&apikey=d20392f7`\n  return axios.get(address).then((response) =>\n  {\n   return response\n  })\n}\n\nconst create = (newReview)=>{\n  const config = {\n    headers: { Authorization: token },\n  }\n\n  const request = axios.post(baseUrl,newReview,config)\n  return request.then(response => response.data)\n}\n\nexport default { getAll, getUsersMovies, setToken, searchMovie,create}","import axios from 'axios'\r\n// const baseUrl = 'http://localhost:3001/api/login'\r\nconst baseUrl = '/api/login'\r\n\r\nconst login = (credentials) =>{\r\n    return axios.post(baseUrl,credentials).then((response)=>\r\n     {\r\n         return response.data\r\n     })\r\n }\r\n \r\n \r\n export default { login }","import axios from 'axios'\r\n//const baseUrl = 'http://localhost:3001/api/users'\r\nconst baseUrl = '/api/users'\r\n\r\nconst register = (new_user)=>{\r\n  \r\n    return axios.post(baseUrl,new_user).then((response)=>\r\n    {\r\n        return response.data\r\n    }\r\n    )\r\n  }\r\n  \r\n  export default { register}","\r\nimport axios from 'axios'\r\nconst baseUrl = '/api/movies'\r\n\r\nlet token = null\r\n\r\nconst setToken = newToken => {\r\n  token = `bearer ${newToken}`\r\n}\r\n\r\nconst create = (newReview)=>{\r\n    const config = {\r\n      headers: { Authorization: token },\r\n    }\r\n  \r\n    const request = axios.post(baseUrl,newReview,config)\r\n    return request.then(response => response.data)\r\n  }\r\n\r\n  const update = (id,updatedReview)=>\r\n  {\r\n    const config = {\r\n        headers: { Authorization: token },\r\n      }\r\n      \r\n      let request = axios.put(`${baseUrl}/${id}`,updatedReview,config)\r\n      return request.then((response)=>\r\n      {\r\n          return response.data\r\n      })\r\n  }\r\n  export default { setToken,create,update}","import React, { useState, useEffect } from 'react'\nimport {\n  BrowserRouter as Router,\n  Switch, Route, Link\n} from \"react-router-dom\"\n\nimport ListOfMovies from './components/ListOfMovies'\nimport Review from './components/Review'\nimport Login from './components/Login'\nimport Information from './components/Information'\nimport SignUp from './components/SignUp'\nimport Notification from './components/Notification'\nimport SearchMovieToReview from './components/SearchMovieToReview'\nimport movieService from './services/movies'\nimport loginService from './services/login'\nimport registerService from './services/register'\nimport reviewService from './services/review'\n\nconst App = () => {\n  const [movies, setMovies] = useState([]) //All movies with their reviews\n  const [movieToReview,setMovieToReview] = useState(null) //Movie from API to revies\n  const [user, setUser] = useState(null) //Logged in user\n  const [errorMessage,setErrorMessage] = useState(null)//Error messages\n  const [usersMovies, setUsersMovies] = useState([]) //Movies of logged in user with their reviews\n  \n  \n\n const sortByTitle = ((a,b) =>{\n    if(a.Title > b.Title)\n    {\n      return 1\n    }\n    else if (b.Title  > a.Title)\n    {\n      return -1\n    }\n    else\n    {\n      return 0\n    }\n  })\n\n  useEffect(() => {     //Gets all reviews from server when user entters in the site\n    movieService.getAll().then(movies =>\n      {\n\n       movies.sort(sortByTitle); \n      setMovies( movies )\n    \n      }\n    )  \n  }, [])\n\n\n  useEffect(() => {   //Handels logged in user when user entters to the site\n    const loggedUserJSON = window.localStorage.getItem('loggedAppUser')\n    if (loggedUserJSON) {\n      const user = JSON.parse(loggedUserJSON)\n      setUser(user)\n    reviewService.setToken(user.token)\n\n    if(user)  //Gets logged in users reviewed movies\n    {\n      movieService.getUsersMovies(user.id).then((data)=>\n      {\n        if(data !==null)\n        {\n        data.movies.sort(sortByTitle)\n        setUsersMovies(data.movies)\n        }\n      })\n    }\n    }\n  }, [])\n\n \nconst logout = ()=>{\n\n  window.localStorage.removeItem('loggedAppUser')\n  setUser(null)\n  reviewService.setToken(null);\n  setUsersMovies([])\n\n}\n  const searchFromAPI = (search)=>    //Gets movie data from omdbapi\n  {\n  //  event.preventDefault()\n    \n    movieService.searchMovie(search).then((response)=>\n    {\n      \n     if (response.data.Response!==\"False\")\n     {\n     setMovieToReview(response.data)\n     }\n     else\n    {\n      setMovieToReview(null)\n    }\n   //  setsearch(\"\")\n    }).catch((error)=>\n    {\n    console.log(error)\n    })\n  }\n  const makeReview =(review) =>   //Handels review made by review component\n  {\n   \n    let ownMovieIndex = usersMovies.findIndex((movie)=>{ //Has users already reviewed this movie \n    return movie.Title === review.Title      \n    })\n    let MovieIndex = movies.findIndex((movie)=>  //Has someone reviewed this movie\n    {\n      return movie.Title === review.Title\n    })\n    let reviewIndex = -1;\n    if(ownMovieIndex !== -1)  //If user has already reviewed this movie\n    {\n\n      reviewIndex = usersMovies[ownMovieIndex].reviews.findIndex((review)=>  //Which reviews is his\n      {\n        return review.user === user.username   \n      })\n\n\n      if(window.confirm(`You have already reviewed this movie. Update the review?`)) //Do we overwrite the review\n      {\n       reviewService.update(usersMovies[ownMovieIndex].reviews[reviewIndex].id,review.reviews[0]).then((updatedReview)=>\n       {\n         //Let's update the review to users and all reviews\n        let tmpUsers = usersMovies.concat()\n        let tmpMovies = movies.concat()\n\n    \n        tmpUsers[ownMovieIndex].reviews[reviewIndex] = updatedReview\n        tmpMovies[MovieIndex].reviews[reviewIndex] = updatedReview\n\n        setUsersMovies(tmpUsers)\n        setMovies(tmpMovies)\n\n       }).catch((error)=>\n        {\n        console.log(error.response.data)\n         })\n     }\n    }\n    if(ownMovieIndex === -1)  // Logged in user hasn't reviewed the movie\n    {\n      reviewService.create(review).then((newReview)=>\n      {\n         if(MovieIndex === -1) //No one has reviewed the movie\n         {\n           review.reviews.length = 0 //Change the review from form to the one in database(includes date and user)\n            review.reviews.push(newReview)\n\n          //Updates the review to all reviews state\n          let movieArray = movies.concat(review)\n\n           movieArray.sort(sortByTitle)\n         setMovies(movieArray)\n         }\n         else   //Movie is already reviewed by someone, so jus add review to that movie\n         {\n          let movieArray =movies.concat()\n                   \n          movieArray[MovieIndex].reviews.push(newReview)\n          setMovies(movieArray)\n         }\n\n         let ownMovieArray\n       \n         if(MovieIndex ===-1)  // add review to users review state\n          ownMovieArray = usersMovies.concat(review) //brand new movie reviewed\n         else      \n         ownMovieArray =usersMovies.concat(movies[MovieIndex]) //someone has already reviewed movie\n         \n         ownMovieArray.sort(sortByTitle)\n        setUsersMovies(ownMovieArray)\n        })\n       \n      }\n       setMovieToReview(null)\n    }\n\n  \n\n\n  const login =(username,password) =>\n  {\n  \n    loginService.login({username,password}).then((user)=>{\n    \n      window.localStorage.setItem(\n        'loggedAppUser', JSON.stringify(user)\n      ) \n      reviewService.setToken(user.token)\n    \n      movieService.getUsersMovies(user.id).then((data)=> //Gets logged in users reviewed movies \n      {\n        data.movies.sort(sortByTitle)\n        setUsersMovies(data.movies)\n      })\n      setUser(user)\n\n    }).catch((error)=>{setErrorMessage(\n    \n      `${error.response.data.error}`\n    )\n    setTimeout(() => {\n      setErrorMessage(null)\n    }, 6000)\n  })\n\n  }\n \n\nconst getSignUpIformation = (username,password,password2)=>{  //New user registeres in the site\n  if(password === password2)\n  {\n\n     registerService.register({userName:username,password}).then((user)=>\n    {\n      login(user.userName,password)  \n    \n    }).catch((error)=>\n    {\n      \n      console.log(error.response)\n      setErrorMessage(error.response.data.message)\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 6000)\n\n     return false\n    })\n  }else\n  {\n    setErrorMessage(\"Passwords didn't match\")\n    setTimeout(() => {\n      setErrorMessage(null)\n    }, 6000)\n    return false\n  }\n}\n\n\nconst padding = {\n  padding: 15\n}\n\n\nreturn(\n\n<div className=\"container\">\n  <Router>\n     \n      <div>\n        <Link style={padding} to=\"/\">home</Link>\n        <Link style={padding} to=\"/reviews\">all reviews</Link>\n        <Link style={padding} to=\"/your_reviews\">movies reviewed by you</Link>\n        <Link style={padding} to=\"/make_review\">make review</Link>\n      {user ?\n      null :  \n      <Link style={padding} to=\"/sign_up\">Sign up</Link>}\n        {user\n      ? <em>{user.username} logged in <button onClick={logout}> Logout</button></em>\n      : <span>You are not logged in</span>\n     // : <Link style={padding} to=\"/login\">login</Link>\n    }\n      </div>\n\n      <Switch>\n        <Route path=\"/sign_up\">\n          {!user?        //Notice ! mark, if not logged in show sign up form, when signs in show make review\n          <div>\n          <Notification message={errorMessage}/>\n          <SignUp getSignUpIformation={getSignUpIformation} />\n          </div>\n          :<div><SearchMovieToReview getSearchedTitle={searchFromAPI}/> \n          <Review movie={movieToReview} getReview={makeReview} />\n          </div>}\n        </Route>\n        <Route path=\"/reviews\">\n          <ListOfMovies  movies={movies} />\n        </Route>\n        <Route path=\"/your_reviews\">\n          {user?                              //Requires logged in to show users movies(reviews)\n          <ListOfMovies movies={usersMovies} />\n          :<div><Notification message={errorMessage}/>\n          <Login getLoginInformation={login}/>\n          </div>}\n        </Route>\n        <Route path=\"/make_review\">\n          {user?                //requires logged in the make review\n           <div ><SearchMovieToReview getSearchedTitle={searchFromAPI}/>\n        <Review movie={movieToReview} getReview={makeReview} />\n        </div>\n        :<div>\n          <Notification message={errorMessage} />\n          <Login getLoginInformation={login}/></div>}\n        </Route>\n        <Route path=\"/login\">       \n        <Login getLoginInformation={login}/>\n        </Route>\n       < Route path=\"/\">\n       <Information amount={movies.length}/>\n        </Route>\n      </Switch>\n\n      <footer style={{clear:'both',marginTop:40,bottom:0,\n    padding:20,backgroundColor:\"grey\"}}>\n        <i>Teemu Hallinen, Ohjelmistosuunnittelu täydennyskoulutus SeAMK 2019-2020</i>\n      </footer>\n    </Router>\n    </div>\n   \n)\n  \n}\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}
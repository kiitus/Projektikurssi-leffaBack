{"version":3,"sources":["components/ShowReview.js","components/Movie.js","components/ListOfMovies.js","components/Review.js","components/Login.js","components/Information.js","components/SignUp.js","components/Notification.js","components/SearchMovieToReview.js","services/movies.js","services/login.js","services/register.js","services/review.js","App.js","index.js"],"names":["ShowReview","review","style","margin","rating","user","date","Movie","movie","selectToShow","toShow","useState","average","setAverage","show","title","reviews","reduce","total","length","toFixed","removeSameline","clear","cursor","Title","onClick","Year","display","float","marginRight","src","Poster","alt","marginLeft","textAlignVertical","imdb","map","index","key","ListOfMovies","movies","movieToShow","setMovieToShow","select","marginTop","Review","getReview","setRating","writeReview","setWriteReview","buttonDisabled","setButtonDisable","imdbRating","overflowX","onSubmit","event","preventDefault","console","log","push","setTimeout","required","min","max","step","value","name","onChange","rows","cols","target","type","disabled","Login","getLoginInformation","username","setUsername","password","setPassword","Information","amount","SignUp","getSignUpIformation","password2","setPassword2","useHistory","Notification","message","color","SearcMovieToReview","getSearchedTitle","search","setsearch","axios","get","then","response","data","id","address","credentials","post","new_user","token","newToken","newReview","config","headers","Authorization","updatedReview","put","App","setMovies","movieToReview","setMovieToReview","setUser","errorMessage","setErrorMessage","usersMovies","setUsersMovies","sortByTitle","a","b","useEffect","movieService","sort","loggedUserJSON","window","localStorage","getItem","JSON","parse","reviewService","login","loginService","setItem","stringify","catch","error","padding","to","removeItem","path","registerService","userName","SearchMovieToReview","Response","ownMovieIndex","findIndex","MovieIndex","reviewIndex","confirm","tmpUsers","concat","tmpMovies","movieArray","ownMovieArray","bottom","backgroundColor","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ed164f8f.chunk.js","sourcesContent":["import React from 'react'\r\nconst ShowReview = ({ review }) => {\r\n\r\n    const margin = {\r\n        margin: 20\r\n    }\r\nreturn(\r\n    <div style={margin}>\r\n    <div>\r\n     <b>Rating:</b> {review.rating}\r\n    </div>\r\n    <div>\r\n    <b>Review:</b> {review.review}\r\n    </div>\r\n    <div>\r\n    <b>Author:</b> {review.user} {review.date}\r\n    </div>\r\n\r\n    </div>)\r\n}\r\nexport default ShowReview\r\n","import React, { useState } from 'react'\r\nimport ShowReview from './ShowReview'\r\n\r\nconst Movie = ({ movie,selectToShow,toShow }) => {\r\n  const [average, setAverage] = useState(null)\r\n\r\n  \r\n  const show=(title)=>\r\n  {\r\n    selectToShow(title)\r\n\r\n\r\n   let total = movie.reviews.reduce((total,review)=>{\r\n     return total+review.rating\r\n   },0)\r\n\r\n   let average = total/movie.reviews.length\r\n     average = average.toFixed(1)\r\n  \r\n    setAverage(average)\r\n  }\r\n\r\n  const sameLine={\r\n    display:'inline-block',\r\n    float:\"left\",\r\n    marginRight:100\r\n  }\r\n  const sameLine2={\r\n //   display:'inline-block',\r\n    marginLeft: 100,\r\n    textAlignVertical: 'top',\r\n    \r\n  }\r\n  const removeSameline={\r\n    clear:\"both\",\r\n    cursor:\"pointer\"\r\n\r\n  }\r\n\r\n  if(toShow !== movie.Title)\r\n{\r\n     return(\r\n  <h3 onClick= {()=>show(movie.Title)} style={removeSameline} >\r\n    {movie.Title} {movie.Year}\r\n  </h3>\r\n  )\r\n     }\r\n     if(toShow === movie.Title)\r\n     {\r\n      return(\r\n      <div>\r\n          <h3 onClick= {()=>show(movie.Title)} style={removeSameline}>\r\n           {movie.Title} {movie.Year}\r\n            </h3>\r\n          \r\n          <div  style={sameLine}>\r\n       \r\n          <img src={movie.Poster} alt=\"Poster\"/>\r\n          </div>\r\n          <div style={sameLine2}>\r\n        \r\n         <h2> IMDB-rating:{movie.imdb}</h2>\r\n         {average?\r\n      <h2>Average-rating:{average}</h2>:null}\r\n          {movie.reviews.map((review,index)=>{\r\n            return <ShowReview key={index} review={review} />\r\n          })}\r\n          </div>\r\n          \r\n      </div>\r\n       )\r\n     }\r\n  \r\n  }\r\n\r\nexport default Movie\r\n","import Movie from './Movie'\r\nimport React, { useState } from 'react'\r\n\r\n\r\nconst ListOfMovies = ({movies}) =>{\r\n    const [movieToShow, setMovieToShow] = useState(null)\r\n\r\n    const select = (title)=>\r\n    {\r\n       \r\n        if(title===movieToShow)\r\n        setMovieToShow(null)\r\n        else\r\n        setMovieToShow(title)\r\n    }\r\n    const style={\r\n        margin:20\r\n    }    \r\n    const styleInner={\r\n    marginLeft:20,\r\n    marginTop:10\r\n    }\r\n\r\nreturn(\r\n    <div style={style}>\r\n<h2>Movies</h2>\r\n<div style={styleInner}>\r\n{movies.map((movie,index)=>\r\n{\r\nreturn <Movie key={index} movie={movie} toShow={movieToShow} selectToShow={select} />\r\n})}\r\n</div>\r\n</div>\r\n)}\r\n\r\nexport default ListOfMovies\r\n","import React, { useState } from 'react'\r\nimport NumericInput from 'react-numeric-input';\r\n\r\n\r\nconst Review = ({ movie, getReview }) =>\r\n{\r\n    const [rating,setRating] = useState(5)\r\n    const [writeReview,setWriteReview] = useState(``)\r\n    \r\n    const [buttonDisabled,setButtonDisable] = useState(false)\r\n\r\nconst reviewAdder = (event) =>\r\n{\r\n  event.preventDefault()\r\n  if(writeReview.length > 3)\r\n  {\r\n\r\n  setButtonDisable(true)\r\n \r\n// const review ={...movie,rating,review:writeReview}\r\n\r\n\r\nconst review = {Title:movie.Title,Year:movie.Year,Poster:movie.Poster,imdb:movie.imdbRating,reviews:[]}\r\n\r\nconsole.log(review.imdb)\r\nreview.reviews.push({rating,review:writeReview})\r\n\r\nconsole.log(review)\r\n getReview(review)\r\n\r\n setRating(5)\r\n setWriteReview(\"\")\r\n\r\n setTimeout(() => {\r\n  setButtonDisable(false)\r\n}, 1000)\r\n \r\n}\r\n}\r\n\r\nconst left={\r\n  display:'inline-block',\r\n  float:\"left\",\r\n  marginRight:110,\r\n  marginLeft:50\r\n}\r\nconst right={\r\n  overflowX: \"auto\"\r\n}\r\n\r\nif(movie === null)\r\n{\r\nreturn null\r\n}\r\nelse{\r\n\r\n    return(\r\n  <div>\r\n  <div style={left}>\r\n   <h2> {movie.Title} {movie.Year} </h2>\r\n  <h3> IMDB-rating:{movie.imdbRating}</h3>\r\n    <p>\r\n    <img src={movie.Poster} alt=\"Poster\"/>\r\n     </p>\r\n     </div>\r\n     \r\n     <form style={right} onSubmit={reviewAdder} >\r\n      \r\n      \r\n      <h2>Review movie</h2>\r\n    Rating <NumericInput required  min={0} max={10} step={0.1} value={rating} name=\"rating\" onChange={setRating}/>\r\n\r\n \r\n     <p> Review</p><p><textarea value={writeReview} name=\"review\"  rows={23} cols={90} \r\n         onChange={({ target }) =>setWriteReview(target.value)}/>\r\n  </p>\r\n  <button type=\"submit\" disabled={buttonDisabled}>Save review</button>\r\n</form>\r\n\r\n\r\n  </div>\r\n    )\r\n}\r\n}\r\n\r\nexport default Review","import React, { useState } from 'react'\r\nimport {\r\n  useHistory\r\n} from 'react-router-dom'\r\n\r\n\r\nconst Login = ({getLoginInformation}) =>\r\n{\r\n    const style ={\r\n        margin: 22\r\n        }\r\n\r\n    const [username, setUsername] = useState('')\r\n    const [password, setPassword] = useState('')\r\n\r\n  //  const history = useHistory()\r\n\r\n    const handleLogin = (event) =>\r\n    {\r\n     event.preventDefault()\r\n     \r\n     getLoginInformation(username,password)\r\n\r\n     setUsername('')\r\n     setPassword(\"\")\r\n  //   history.push('/')\r\n    }\r\n    return(\r\n    <div style={style}>\r\n     \r\n    <form onSubmit={handleLogin}>\r\n      <div>\r\n        username\r\n          <input\r\n          type=\"text\"\r\n          value={username}\r\n          name=\"Username\"\r\n          onChange={({ target }) => setUsername(target.value)}\r\n        />\r\n      </div>\r\n      <div>\r\n        password\r\n          <input\r\n          type=\"password\"\r\n          value={password}\r\n          name=\"Password\"\r\n          onChange={({ target }) => setPassword(target.value)}\r\n        />\r\n       \r\n        \r\n      </div>\r\n      <button type=\"submit\">login</button>\r\n    </form>\r\n    \r\n  </div>\r\n    )\r\n}\r\nexport default Login","import React from 'react'\r\n\r\nconst margin = {\r\n    margin:20\r\n}\r\nconst Information = ({amount}) =>{\r\n    return(\r\n        <div style={margin}>\r\n        <h2>Welcome to use THE REVIEWER</h2>\r\n    <p>This is an app for reading and writing reviews for movies. You can read\r\n    reviews without signing in, but to write a review you must make an account for the site. You will \r\n    see the reviews by cliking the title of the movie</p>\r\n    <p>There are {amount} movies reviewed in the site</p>\r\n    <p>The site has been made using React, MongoDB and node.js.</p>\r\n\r\n    </div>\r\n    )}\r\n    \r\n    export default Information","import React, { useState } from 'react'\r\nimport {\r\n  useHistory\r\n} from 'react-router-dom'\r\n\r\n\r\nconst SignUp = ({getSignUpIformation}) =>\r\n{\r\n    const style ={\r\n        margin: 22\r\n        }\r\n\r\n    const [username, setUsername] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [password2, setPassword2] = useState('')\r\n    const history = useHistory()\r\n\r\n    const handleSingUp = (event) =>\r\n    {\r\n     event.preventDefault()\r\n     \r\n   console.log(getSignUpIformation(username,password,password2))\r\n\r\n    \r\n     setUsername('')\r\n     setPassword(\"\")\r\n     setPassword2(\"\")\r\n   //  history.push('/make_review')\r\n    }\r\n    return(\r\n    <div style={style}>\r\n     \r\n    <form onSubmit={handleSingUp}>\r\n      <div>\r\n        username\r\n          <input\r\n          type=\"text\"\r\n          value={username}\r\n          name=\"Username\"\r\n          onChange={({ target }) => setUsername(target.value)}\r\n        />\r\n      </div>\r\n      <div>\r\n        password\r\n          <input\r\n          type=\"password\"\r\n          value={password}\r\n          name=\"Password\"\r\n          onChange={({ target }) => setPassword(target.value)}\r\n        />\r\n      </div>\r\n      <div>\r\n        password\r\n          <input\r\n          type=\"password\"\r\n          value={password2}\r\n          name=\"Password2\"\r\n          onChange={({ target }) => setPassword2(target.value)}\r\n        />\r\n       \r\n        \r\n      </div>\r\n\r\n      <button type=\"submit\">Sign up</button>\r\n    </form>\r\n    \r\n  </div>\r\n    )\r\n}\r\nexport default SignUp","import React from 'react'\r\n\r\nconst Notification = ({ message }) => {\r\n    const errorStyle ={\r\n        color:\"red\",\r\n        margin:10\r\n    }\r\n    if (message === null) {\r\n      return null\r\n    }\r\n  \r\n    return (\r\n      <div style={errorStyle}>\r\n        {message}\r\n      </div>\r\n    )\r\n  }\r\n\r\n  export default Notification","import React, { useState } from 'react'\r\n\r\nconst SearcMovieToReview = ({getSearchedTitle}) =>\r\n{\r\n    const [search, setsearch] = useState(\"\")\r\n\r\n    const getMovieAPI = (event)=>    //Haetaan eolkuvan tiedot omdbapi:sta\r\n    {\r\n      event.preventDefault()\r\n\r\n      getSearchedTitle(search)\r\n      \r\n      setsearch(\"\")\r\n    }\r\n    const left={\r\n      display:'inline-block',\r\n      float:\"left\",\r\n      marginRight:10\r\n    }\r\n  \r\n    return(\r\n    <div>\r\n    <form onSubmit={getMovieAPI} >\r\n      <h2>Search movie to review</h2>\r\n\r\n         Title <input type=\"text\" value={search} name=\"search\"\r\n         onChange={({ target }) =>setsearch(target.value)}/>\r\n        <button type=\"submit\">Search movie</button>\r\n    </form>\r\n    \r\n  </div>\r\n    )\r\n}\r\nexport default SearcMovieToReview","import axios from 'axios'\nconst baseUrl = '/api/movies'\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response => response.data)\n}\n\nconst getUsersMovies = (id) =>\n{\n  const request = axios.get(`${baseUrl}/${id}`)\n  return request.then(response => response.data)\n}\n\n\nlet token = null\n\nconst setToken = newToken => {\n  token = `bearer ${newToken}`\n}\n\n\nconst searchMovie = (title) =>\n{\n  const address = `https://www.omdbapi.com/?t=${title}&apikey=d20392f7`\n  return axios.get(address).then((response) =>\n  {\n   return response\n  })\n}\n\nconst create = (newReview)=>{\n  const config = {\n    headers: { Authorization: token },\n  }\n\n  const request = axios.post(baseUrl,newReview,config)\n  return request.then(response => response.data)\n}\n\nexport default { getAll, getUsersMovies, setToken, searchMovie,create}","import axios from 'axios'\r\n// const baseUrl = 'http://localhost:3001/api/login'\r\nconst baseUrl = '/api/login'\r\n\r\nconst login = (credentials) =>{\r\n    return axios.post(baseUrl,credentials).then((response)=>\r\n     {\r\n         return response.data\r\n     })\r\n }\r\n \r\n \r\n export default { login }","import axios from 'axios'\r\n//const baseUrl = 'http://localhost:3001/api/users'\r\nconst baseUrl = '/api/users'\r\n\r\nconst register = (new_user)=>{\r\n  \r\n    return axios.post(baseUrl,new_user).then((response)=>\r\n    {\r\n        return response.data\r\n    }\r\n    )\r\n  }\r\n  \r\n  export default { register}","\r\nimport axios from 'axios'\r\nconst baseUrl = '/api/movies'\r\n\r\nlet token = null\r\n\r\nconst setToken = newToken => {\r\n  token = `bearer ${newToken}`\r\n}\r\n\r\nconst create = (newReview)=>{\r\n    const config = {\r\n      headers: { Authorization: token },\r\n    }\r\n  \r\n    const request = axios.post(baseUrl,newReview,config)\r\n    return request.then(response => response.data)\r\n  }\r\n\r\n  const update = (id,updatedReview)=>\r\n  {\r\n    const config = {\r\n        headers: { Authorization: token },\r\n      }\r\n      \r\n      let request = axios.put(`${baseUrl}/${id}`,updatedReview,config)\r\n      return request.then((response)=>\r\n      {\r\n          return response.data\r\n      })\r\n  }\r\n  export default { setToken,create,update}","import React, { useState, useEffect } from 'react'\nimport {\n  BrowserRouter as Router,\n  Switch, Route, Link\n} from \"react-router-dom\"\n\nimport ListOfMovies from './components/ListOfMovies'\nimport Movie from './components/Movie'\nimport Review from './components/Review'\nimport Login from './components/Login'\nimport Information from './components/Information'\nimport SignUp from './components/SignUp'\nimport Notification from './components/Notification'\nimport SearchMovieToReview from './components/SearchMovieToReview'\nimport movieService from './services/movies'\nimport loginService from './services/login'\nimport registerService from './services/register'\nimport reviewService from './services/review'\n\nconst App = () => {\n  const [movies, setMovies] = useState([])\n // const [search, setsearch] = useState('')\n  const [movieToReview,setMovieToReview] = useState(null)\n // const [username, setUsername] = useState('') \n // const [password, setPassword] = useState('') \n  const [user, setUser] = useState(null)\n  const [errorMessage,setErrorMessage] = useState(null)\n  const [usersMovies, setUsersMovies] = useState([])\n  \n  \n\n const sortByTitle = ((a,b) =>{\n    if(a.Title > b.Title)\n    {\n      return 1\n    }\n    else if (b.Title  > a.Title)\n    {\n      return -1\n    }\n    else\n    {\n      return 0\n    }\n  })\n\n  useEffect(() => {\n    movieService.getAll().then(movies =>\n      {\n\n       movies.sort(sortByTitle); \n      setMovies( movies )\n    \n      }\n    )  \n  }, [])\n\n\n  useEffect(() => {\n    const loggedUserJSON = window.localStorage.getItem('loggedBlogAppUser')\n    if (loggedUserJSON) {\n      const user = JSON.parse(loggedUserJSON)\n      setUser(user)\n    reviewService.setToken(user.token)\n\n    if(user)\n    {\n      movieService.getUsersMovies(user.id).then((data)=>\n      {\n        if(data !==null)\n        {\n        data.movies.sort(sortByTitle)\n        setUsersMovies(data.movies)\n        }\n      })\n    }\n    }\n  }, [])\n\n /* const handleLogin = (event)=>{\n    event.preventDefault()\n    loginService.login({username,password}).then((user)=>{\n      console.log(user)\n      window.localStorage.setItem(\n        'loggedBlogAppUser', JSON.stringify(user)\n      ) \n      movieService.setToken(user.token)\n      setUser(user)\n      setUsername(\"\")\n      setPassword(\"\")\n    }\n    ).catch((error)=>{ \n    setErrorMessage(\n      `${error.response.data.error}`\n    )\n    setTimeout(() => {\n      setErrorMessage(null)\n    }, 2000)\n  })\n} \n*/\nconst logout = ()=>{\n\n  window.localStorage.removeItem('loggedBlogAppUser')\n  setUser(null)\n  reviewService.setToken(null);\n  setUsersMovies([])\n\n}\n  const searchFromAPI = (search)=>    //Haetaan eolkuvan tiedot omdbapi:sta\n  {\n  //  event.preventDefault()\n    \n    movieService.searchMovie(search).then((response)=>\n    {\n      \n     if (response.data.Response!==\"False\")\n     {\n     setMovieToReview(response.data)\n     }\n     else\n    {\n      setMovieToReview(null)\n    }\n   //  setsearch(\"\")\n    }).catch((error)=>\n    {\n    console.log(error)\n    })\n  }\n  const makeReview =(review) =>   //Käsitellään Review komponentilla tehty arvostelu\n  {\n   \n    let ownMovieIndex = usersMovies.findIndex((movie)=>{\n    return movie.Title === review.Title      \n    })\n    let MovieIndex = movies.findIndex((movie)=>\n    {\n      return movie.Title === review.Title\n    })\n    let reviewIndex = -1;\n    if(ownMovieIndex !== -1)\n    {\n\n      reviewIndex = usersMovies[ownMovieIndex].reviews.findIndex((review)=>\n      {\n        return review.user === user.username\n      })\n      console.log(`Nämä löytyy arvostelusta ${usersMovies[ownMovieIndex].reviews[reviewIndex]}`)\n      if(window.confirm(`You have already reviewed this movie. Update the review?`))\n      {\n       reviewService.update(usersMovies[ownMovieIndex].reviews[reviewIndex].id,review.reviews[0]).then((updatedReview)=>\n       {\n        let tmpUsers = usersMovies.concat()\n        let tmpMovies = movies.concat()\n\n    \n        tmpUsers[ownMovieIndex].reviews[reviewIndex] = updatedReview\n        tmpMovies[MovieIndex].reviews[reviewIndex] = updatedReview\n\n        setUsersMovies(tmpUsers)\n        setMovies(tmpMovies)\n\n       }).catch((error)=>\n        {\n        console.log(error.response.data)\n         })\n     }\n    }\n    if(ownMovieIndex === -1)\n    {\n      reviewService.create(review).then((newReview)=>\n      {\n         if(MovieIndex === -1)\n         {\n           review.reviews.length = 0//poistaa tallentamisessa käytetyn arvostelun, lisää backendin palauttaman arvostelun\n            review.reviews.push(newReview)\n          let movieArray = movies.concat(review)\n\n           movieArray.sort(sortByTitle)\n         setMovies(movieArray)\n         }\n         else\n         {\n          let movieArray =movies.concat()\n                   \n          movieArray[MovieIndex].reviews.push(newReview)\n          setMovies(movieArray)\n         }\n\n         let ownMovieArray\n       \n         if(MovieIndex ===-1)\n          ownMovieArray = usersMovies.concat(review)\n         else      //Jos leffaa on jo arvostelu,mutta uusi kyseiselle käyttäjälle\n         ownMovieArray =usersMovies.concat(movies[MovieIndex])\n         \n         ownMovieArray.sort(sortByTitle)\n        setUsersMovies(ownMovieArray)\n        })\n       \n      }\n       setMovieToReview(null)\n    }\n\n  \n\n\n  const login =(username,password) =>\n  {\n  \n    loginService.login({username,password}).then((user)=>{\n    \n      window.localStorage.setItem(\n        'loggedBlogAppUser', JSON.stringify(user)\n      ) \n      reviewService.setToken(user.token)\n    \n      movieService.getUsersMovies(user.id).then((data)=>  \n      {\n        data.movies.sort(sortByTitle)\n        setUsersMovies(data.movies)\n      })\n      setUser(user)\n\n    }).catch((error)=>{setErrorMessage(\n    \n      `${error.response.data.error}`\n    )\n    setTimeout(() => {\n      setErrorMessage(null)\n    }, 6000)\n  })\n\n  }\n \n\nconst getSignUpIformation = (username,password,password2)=>{\n  if(password === password2)\n  {\n\n     registerService.register({userName:username,password}).then((user)=>\n    {\n      login(user.userName,password)\n      console.log(\"Oikein, pitäisi tulla true\")\n      \n      setErrorMessage(\"Account created. Redirect doesn't work yet,please click \\\"make review\\\"\")\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 16000)\n\n    \n    }).catch((error)=>\n    {\n      \n      console.log(error.response)\n      setErrorMessage(error.response.data.message)\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 6000)\n\n      console.log(\"Väärin, pitäisi tulla false\")\n     return false\n     console.log(\"Falsen jälkeen\")\n    })\n  }else\n  {\n    setErrorMessage(\"Passwords didn't match\")\n    setTimeout(() => {\n      setErrorMessage(null)\n    }, 6000)\n    return false\n  }\n}\n\n\nconst padding = {\n  padding: 15\n}\nconst margin ={\nmargin:50,\noverflowX: \"auto\"\n}\n\nreturn(\n\n<div style = {margin}>\n  <Router>\n     \n      <div>\n        <Link style={padding} to=\"/\">home</Link>\n        <Link style={padding} to=\"/reviews\">all reviews</Link>\n        <Link style={padding} to=\"/your_reviews\">movies reviewed by you</Link>\n        <Link style={padding} to=\"/make_review\">make review</Link>\n      {user ?\n      null :  \n      <Link style={padding} to=\"/sign_up\">Sign up</Link>}\n        {user\n      ? <em>{user.username} logged in <button onClick={logout}> Logout</button></em>\n      : <span>You are not logged in</span>\n     // : <Link style={padding} to=\"/login\">login</Link>\n    }\n      </div>\n\n      <Switch>\n        <Route path=\"/sign_up\">\n          <Notification message={errorMessage}/>\n          <SignUp getSignUpIformation={getSignUpIformation} />\n        </Route>\n        <Route path=\"/reviews\">\n          <ListOfMovies  movies={movies} />\n        </Route>\n        <Route path=\"/your_reviews\">\n          {user?\n          <ListOfMovies movies={usersMovies} />:\n          <div><Notification message={errorMessage}/>\n          <Login getLoginInformation={login}/>\n          </div>}\n        </Route>\n        <Route path=\"/make_review\">\n          {user? <div >\n        <SearchMovieToReview getSearchedTitle={searchFromAPI}/>\n        <Review movie={movieToReview} getReview={makeReview} />\n        </div>\n        :<div>\n          <Notification message={errorMessage} />\n          <Login getLoginInformation={login}/></div>}\n        </Route>\n        <Route path=\"/login\">\n        <Login getLoginInformation={login}/>\n        </Route>\n       < Route path=\"/\">\n       <Information amount={movies.length}/>\n        </Route>\n      </Switch>\n\n      <footer style={{clear:'both',marginTop:40,bottom:0,\n    padding:20,backgroundColor:\"grey\"}}>\n        <i>Teemu Hallinen, Ohjelmistosuunnittelu täydennyskoulutus 2019-2020</i>\n      </footer>\n    </Router>\n    </div>\n   \n)\n  \n}\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}
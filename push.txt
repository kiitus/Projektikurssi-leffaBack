movieService.create(review).then((newReview)=>
    {
      const index = movies.findIndex((movie)=>
      {
       return movie.Title ===review.Title
      })
      
      if(index === -1)
      {
      let sortArray = [...movies]
      
      sortArray.push(review)
      sortArray.sort(sortByTitle)
    

      setMovies(sortArray)
      //setMovies(movies.concat(review))    //Kaataa ohjelman jos tekee toisen arvoselun samalla istunnolla
      }
      else
      {
        let newArray = [...movies]
        //newArray[index] = {...newArray[index].reviews.push(newReview)}

       
        newArray[index].reviews.push(newReview)
       console.log("Käykö 2 kertaa")
        setMovies(newArray)
       
      }

      const indexOwnReviews = usersMovies.findIndex((movie)=>
      {
       return movie.Title ===review.Title
      })
      
      if(indexOwnReviews === -1)
      {
    
        let sortArray = [...usersMovies]
        if(index ===-1)
       sortArray.push(review)
        else      //Jos leffaa on jo arvostelu,mutta uusi kyseiselle käyttäjälle
        sortArray.push(movies[index])
        
        sortArray.sort(sortByTitle)
       setUsersMovies(sortArray)
      //setUsersMovies(usersMovies.concat(review))    //Kaataa ohjelman jos tekee toisen arvoselun samalla istunnolla
      }
      else
      {
        let tmpArray = [...usersMovies]
        //newArray[index] = {...newArray[index].reviews.push(newReview)}

       
        tmpArray[indexOwnReviews].reviews.push(newReview)
       
        setUsersMovies(tmpArray)
       
      }



      setMovieToReview(null)
    })
 